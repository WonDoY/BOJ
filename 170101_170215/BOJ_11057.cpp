#include<cstdio>
#define MAX 1001

// 오르막 수 : 오름차순을 이루는 수
// 인접한 수가 같아도 오름차수
// 수 길이 n 오르막수 개수 구하는 프로그램 수는 0으로 시작 가능 char
// input : n ~ [1,1000]
// 1 : 0 1 2 3 4 5 6 7 8 9 <10> 10 
// 2 : 00 01 02 03 04 05 06 07 08 09 <10>
//     11 12 13 14 15 16 17 18 19 <9>
//     22 23 24 25 26 27 28 29 <8>
//     33 34 35 36 37 38 39 <7>
//     ....<6 5 4 3 2 1>
//     88 89 <2>
//     99 <1> 
// 10 TO 1 ~ SUM // 55 
// 3 : 000 ~ 099 // 55 ~ F(2)
//     111 112 113 .... <9>
//    FROM 9 TO 1 , 8 TO 1 , 7 TO 1 , 6 TO 1 , 5 TO 1 , 4 TO 1 , 3 TO 1 , 2 TO 1 , 1 TO 1 (999)
// 55 - 45 - 34 - 28 - 21 - 15 - 10 - 6 - 3 - 1  = 218
// 4 : 0000 ~ 0999 // 218
//   : 1111 ~ 1999 // (9 * 45)
//   : 2           // (8 
// output : n % 10007 

//      0  1  2  3  4  5  6  7  8  9 
// 1 :  1  1  1  1  1  1  1  1  1  1 = 10
// 2 : 10  9  8  7  6  5  4  3  2  1 = 55
// 3 : 55 45 36 28 21 15 10  6  3  1 = 220
// 4 :218
typedef long long ll;
int n;
ll f[MAX][11] = {{0,0,0,0,0,0,0,0,0,0,0},{1,1,1,1,1,1,1,1,1,1,10},};
int main(){
	scanf("%d",&n);
	for(int i = 2 ; i < MAX ; i++){
		f[i][10] = 0; // result
		for(int j = 0 ; j < 10 ; j++){
			f[i][j] = 0;
			for(int k = j ; k < 10 ; k++){
				f[i][j] += f[i-1][k];
			}
			f[i][j] = f[i][j]%10007;
		}		
		for(int j = 0 ; j < 10 ; j++){
			f[i][10] += f[i][j];
		}
		f[i][10] = f[i][10]%10007;
	}
	//for(int i = 1 ; i <= n ; i++){
	//	for(int j = 0 ; j < 11 ; j++){
	//		printf("%lld ",f[i][j]);
	//	}
	//	printf("\n");
	//}
	printf("%lld",f[n][10]);
	return 0;
}